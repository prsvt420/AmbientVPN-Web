name: ambientvpn_web

services:
  web:
    container_name: web
    env_file:
      - .env
    build: .
    restart: always
    expose:
      - 8000
    depends_on:
      - database
    volumes:
      - ./staticfiles:/web/staticfiles
      - ./:/web
    command: sh -c "make migrate && make collectstatic && make run-prod"

  database:
    container_name: database
    env_file:
      - .env
    image: postgres
    restart: always
    expose:
      - 5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    volumes:
      - ./staticfiles:/web/staticfiles
      - ./nginx/certbot:/var/www/certbot
      - ./etc/letsencrypt:/etc/letsencrypt
    restart: always

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./nginx/certbot:/var/www/certbot
      - ./etc/letsencrypt:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
